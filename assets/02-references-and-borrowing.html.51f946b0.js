import{r as t,o as l,c as r,a as n,b as a,w as e,F as u,e as o,d as s}from"./app.b3a2ff78.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";var k="/the-rust-programming-language/images/trpl04-05.svg";const b={},m={class:"table-of-contents"},d=s("4.2 \u5F15\u7528\u4E0E\u501F\u7528"),g=s("\u53EF\u53D8\u7684\u5F15\u7528"),f=s("\u60AC\u5782\u5F15\u7528"),h=s("\u5F15\u7528\u7684\u89C4\u5219"),v=o(`<h2 id="_4-2-\u5F15\u7528\u4E0E\u501F\u7528" tabindex="-1"><a class="header-anchor" href="#_4-2-\u5F15\u7528\u4E0E\u501F\u7528" aria-hidden="true">#</a> 4.2 \u5F15\u7528\u4E0E\u501F\u7528</h2><p>\u5728\u4EE3\u78014-5\u4E2D\u5173\u4E8E\u5143\u7EC4\u7684\u793A\u4F8B\u4EE3\u7801, \u5B58\u5728\u4E00\u4E2A\u95EE\u9898: \u6211\u4EEC\u5FC5\u987B\u5C06 <code>String</code> \u8FD4\u56DE\u7ED9\u8C03\u7528\u51FD\u6570, \u8FD9\u6837\u5728\u8C03\u7528 <code>calculate_length</code> \u7684\u65F6\u5019, \u6211\u4EEC\u624D\u80FD\u591F\u4F7F\u7528 <code>String</code>, \u56E0\u4E3A <code>String</code> \u88AB\u79FB\u52A8\u5230\u4E86 <code>calculate_length</code> \u4E2D. \u9664\u4E86\u8FD9\u79CD\u65B9\u5F0F\u4E4B\u5916, \u6211\u4EEC\u8FD8\u53EF\u4EE5\u63D0\u4F9B <code>String</code> \u503C\u7684\u5F15\u7528. <strong>\u5F15\u7528</strong>(<em>reference</em>)\u548C\u6307\u9488\u6709\u70B9\u50CF, \u540C\u6837\u5B58\u50A8\u4E86\u4E00\u4E2A\u5185\u5B58\u5730\u5740, \u6211\u4EEC\u80FD\u591F\u901A\u8FC7\u8FD9\u4E2A\u5730\u5740\u53BB\u8BFB\u53D6\u5B58\u50A8\u5728\u5176\u4ED6\u53D8\u91CF\u4E2D\u7684\u6570\u636E. \u4F46\u548C\u6307\u9488\u4E0D\u540C\u7684\u662F, \u5F15\u7528\u5FC5\u987B\u8981\u786E\u4FDD\u6307\u5411\u67D0\u4E2A\u7279\u5B9A\u7C7B\u578B\u7684\u6709\u6548\u503C. \u4E0B\u9762\u7684\u793A\u4F8B, \u8BF4\u660E\u4E86\u6211\u4EEC\u5E94\u8BE5\u5982\u4F55\u5B9A\u4E49\u5E76\u4F7F\u7528 <code>calculate_length</code> \u51FD\u6570, \u8BE5\u51FD\u6570\u7684\u53C2\u6570\u662F\u5BF9\u8C61\u7684\u5F15\u7528, \u800C\u4E0D\u662F\u83B7\u53D6\u503C\u7684\u6240\u6709\u6743:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> len <span class="token operator">=</span> <span class="token function">calculate_length</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;The length of &#39;{}&#39; is {}.&quot;</span><span class="token punctuation">,</span> s1<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">calculate_length</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">usize</span> <span class="token punctuation">{</span>
    s<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u53EF\u4EE5\u53D1\u73B0\u53D8\u91CF\u58F0\u660E\u548C\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u5143\u7EC4\u4EE3\u7801\u90FD\u6D88\u5931\u4E86. \u6211\u4EEC\u4F20\u9012\u7ED9 <code>calculate_length</code> \u7684\u53C2\u6570\u662F <code>&amp;s1</code>, \u540C\u65F6\u5728\u51FD\u6570\u5B9A\u4E49\u4E2D, \u6211\u4EEC\u8BFB\u53D6 <code>&amp;String</code> \u800C\u4E0D\u662F <code>String</code>. &amp; \u7B26\u53F7\u8868\u793A <strong>\u5F15\u7528</strong>, \u8FD9\u5141\u8BB8\u6211\u4EEC\u76F4\u63A5\u5F15\u7528\u67D0\u4E2A\u503C, \u800C\u4E0D\u9700\u8981\u901A\u8FC7\u83B7\u53D6\u6240\u6709\u6743\u7684\u65B9\u5F0F. \u56FE\u88684-5\u662F\u76F8\u5173\u7684\u793A\u610F\u56FE.</p><p><img src="`+k+`" alt="4-5"></p><blockquote><p>\u6CE8\u610F: \u4E0E\u4F7F\u7528 <code>&amp;</code> \u5F15\u7528\u76F8\u53CD\u7684\u64CD\u4F5C\u662F <strong>\u89E3\u5F15\u7528</strong> (<em>dereferencing</em>), \u901A\u8FC7\u7B26\u53F7 <code>*</code> \u5B9E\u73B0. \u6211\u4EEC\u4F1A\u5728\u7B2C\u516B\u7AE0\u4E2D\u770B\u5230\u4E00\u4E9B\u89E3\u5F15\u7528\u7684\u793A\u4F8B, \u5728\u7B2C15\u7AE0\u4E2D\u63A2\u8BA8\u89E3\u5F15\u7528\u7684\u7EC6\u8282.</p></blockquote><p>\u73B0\u5728\u6211\u4EEC\u6765\u67E5\u770B\u4E0B\u9762\u8FD9\u4E2A\u51FD\u6570\u8C03\u7528:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> len <span class="token operator">=</span> <span class="token function">calculate_length</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;The length of &#39;{}&#39; is {}.&quot;</span><span class="token punctuation">,</span> s1<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">calculate_length</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">usize</span> <span class="token punctuation">{</span>
    s<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><code>&amp;s1</code> \u7684\u8BED\u6CD5\u5141\u8BB8\u6211\u4EEC\u521B\u5EFA\u4E00\u4E2A\u5F15\u7528, \u6307\u5411 <code>s1</code> \u7684\u503C, \u4F46\u662F\u5E76\u4E0D\u62E5\u6709\u8FD9\u4E2A\u503C. \u56E0\u4E3A\u5E76\u6CA1\u6709\u6240\u6709\u6743, \u6240\u4EE5\u5373\u4F7F\u505C\u6B62\u5F15\u7528, \u5B83\u6240\u6307\u5411\u7684\u503C\u4E5F\u4E0D\u4F1A\u88AB\u4E22\u5F03.</p><p>\u540C\u6837\u5730, \u51FD\u6570\u7B7E\u540D\u4F7F\u7528 <code>&amp;</code> \u6765\u8868\u660E <code>s</code> \u662F\u4E00\u4E2A\u5F15\u7528. \u73B0\u5728\u6211\u4EEC\u6765\u7ED9\u4EE3\u7801\u6DFB\u52A0\u4E00\u4E9B\u6CE8\u91CA:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> len <span class="token operator">=</span> <span class="token function">calculate_length</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;The length of &#39;{}&#39; is {}.&quot;</span><span class="token punctuation">,</span> s1<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">calculate_length</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">usize</span> <span class="token punctuation">{</span> <span class="token comment">// s \u662F String \u7684\u5F15\u7528</span>
    s<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token comment">// s \u5728\u8FD9\u91CC\u79BB\u5F00\u4F5C\u7528\u57DF, \u4F46\u662F\u56E0\u4E3A\u5BF9\u4E8E\u5F15\u7528\u6240\u5BF9\u5E94\u7684\u503C\u6CA1\u6709\u6240\u6709\u6743, \u6240\u4EE5\u5E76\u6CA1\u6709\u53D1\u751F\u4EC0\u4E48\u7279\u522B\u7684\u4E8B\u60C5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u53D8\u91CF <code>s</code> \u7684\u6709\u6548\u4F5C\u7528\u57DF\u4E0E\u51FD\u6570\u53C2\u6570\u7684\u4F5C\u7528\u57DF\u4E00\u81F4, \u552F\u4E00\u7684\u533A\u522B\u662F\u5229\u7528\u5F15\u7528\u7684 <code>s</code>, \u5373\u4F7F\u505C\u6B62\u5F15\u7528, \u4E5F\u4E0D\u4F1A\u88AB\u4E22\u5F03, \u56E0\u4E3A <code>s</code> \u4E0D\u5B58\u5728\u6240\u6709\u6743. \u5F53\u51FD\u6570\u4F7F\u7528\u5F15\u7528\u800C\u4E0D\u662F\u5B9E\u9645\u503C\u4F5C\u4E3A\u53C2\u6570\u65F6, \u6211\u4EEC\u4E0D\u518D\u9700\u8981\u8FD4\u56DE\u5BF9\u5E94\u503C\u6765\u4EA4\u8FD8\u63A7\u5236\u6743, \u56E0\u4E3A\u59CB\u7EC8\u4E0D\u66FE\u62E5\u6709\u63A7\u5236\u6743.</p><p>\u6211\u4EEC\u5C06\u521B\u5EFA\u5F15\u7528\u7684\u884C\u4E3A\u79F0\u4E3A <strong>\u501F\u7528</strong>(<em>borrowing</em>). \u5728\u73B0\u5B9E\u751F\u6D3B\u4E2D, \u5982\u679C\u67D0\u4EBA\u62E5\u6709\u67D0\u6837\u4E1C\u897F, \u6211\u4EEC\u53EF\u4EE5\u5411\u8FD9\u4E2A\u4EBA\u501F\u7528\u8FD9\u4E2A\u4E1C\u897F, \u5F53\u6211\u4EEC\u7528\u5B8C\u4E4B\u540E, \u5C31\u8981\u5C06\u5176\u5F52\u8FD8. \u4F60\u5E76\u4E0D\u62E5\u6709\u5B83.</p><p>\u90A3\u4E48\u5F53\u6211\u4EEC\u8BD5\u56FE\u6539\u53D8\u6211\u4EEC\u6240\u501F\u7528\u7684\u4E1C\u897F\u7684\u65F6\u5019, \u4F1A\u53D1\u751F\u4EC0\u4E48\u5462? \u5C1D\u8BD54-6\u7684\u4EE3\u7801, \u5267\u900F: \u8FD9\u6BB5\u4EE3\u7801\u4E0D\u4F1A\u751F\u6548!</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">change</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">change</span><span class="token punctuation">(</span>some_string<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    some_string<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">&quot;, world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5F53\u6211\u4EEC\u6267\u884C\u4EE5\u4E0A\u4EE3\u7801\u7684\u65F6\u5019, \u4F1A\u9047\u5230\u8FD9\u4E2A\u62A5\u9519:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ cargo run
   Compiling ownership v0.1.0 <span class="token punctuation">(</span>file:///projects/ownership<span class="token punctuation">)</span>
error<span class="token punctuation">[</span>E0596<span class="token punctuation">]</span>: cannot borrow <span class="token variable"><span class="token variable">\`</span>*some_string<span class="token variable">\`</span></span> as mutable, as it is behind a <span class="token variable"><span class="token variable">\`</span><span class="token operator">&amp;</span><span class="token variable">\`</span></span> reference
 --<span class="token operator">&gt;</span> src/main.rs:8:5
  <span class="token operator">|</span>
<span class="token number">7</span> <span class="token operator">|</span> fn change<span class="token punctuation">(</span>some_string: <span class="token operator">&amp;</span>String<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token operator">|</span>                        ------- help: consider changing this to be a mutable reference: <span class="token variable"><span class="token variable">\`</span><span class="token operator">&amp;</span>mut String<span class="token variable">\`</span></span>
<span class="token number">8</span> <span class="token operator">|</span>     some_string.push_str<span class="token punctuation">(</span><span class="token string">&quot;, world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">|</span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ <span class="token variable"><span class="token variable">\`</span>some_string<span class="token variable">\`</span></span> is a <span class="token variable"><span class="token variable">\`</span><span class="token operator">&amp;</span><span class="token variable">\`</span></span> reference, so the data it refers to cannot be borrowed as mutable

For <span class="token function">more</span> information about this error, try <span class="token variable"><span class="token variable">\`</span>rustc --explain E0596<span class="token variable">\`</span></span><span class="token builtin class-name">.</span>
error: could not compile <span class="token variable"><span class="token variable">\`</span>ownership<span class="token variable">\`</span></span> due to previous error
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6B63\u5982\u53D8\u91CF\u5728\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u662F\u4E0D\u53EF\u53D8\u7684, \u5F15\u7528\u4E5F\u662F. Rust \u4E0D\u5141\u8BB8\u6211\u4EEC\u4FEE\u6539\u6240\u5F15\u7528\u7684\u503C.</p><h3 id="\u53EF\u53D8\u7684\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u53EF\u53D8\u7684\u5F15\u7528" aria-hidden="true">#</a> \u53EF\u53D8\u7684\u5F15\u7528</h3><p>\u73B0\u5728\u6211\u4EEC\u5F00\u59CB\u4FEE\u65394-6\u7684\u4EE3\u7801, \u5BF9\u6240\u501F\u7528\u7684\u53D8\u91CF\u8FDB\u884C\u4E00\u4E9B\u7B80\u5355\u7684\u4FEE\u6539, \u5C06\u5F15\u7528\u53D8\u6210<strong>\u53EF\u53D8\u5F15\u7528</strong>(<em>mutable reference</em>):</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">change</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">change</span><span class="token punctuation">(</span>some_string<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    some_string<span class="token punctuation">.</span><span class="token function">push_str</span><span class="token punctuation">(</span><span class="token string">&quot;, world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u9996\u5148, \u6211\u4EEC\u7ED9 <code>s</code> \u6DFB\u52A0 <code>mut</code> \u53EF\u53D8\u6807\u8BC6. \u7136\u540E\u5728\u8C03\u7528 <code>change</code> \u51FD\u6570\u7684\u65F6\u5019\u901A\u8FC7 <code>&amp;mut s</code> \u521B\u5EFA\u4E00\u4E2A\u53EF\u53D8\u5F15\u7528, \u5E76\u4E14\u66F4\u65B0\u51FD\u6570\u7B7E\u540D, \u4EE5\u63A5\u53D7\u4E00\u4E2A\u53EF\u53D8\u5F15\u7528<code>some_string: &amp;mut String</code>. \u8FD9\u6837\u7684\u4F20\u53C2\u5F62\u5F0F, \u5C31\u5F88\u5BB9\u6613\u770B\u51FA\u6765 <code>change</code> \u51FD\u6570\u4F1A\u6539\u53D8\u6240\u501F\u7528\u7684\u503C.</p><p>\u4F46\u53EF\u53D8\u5F15\u7528\u6709\u4E00\u4E2A\u6BD4\u8F83\u5927\u7684\u9650\u5236: \u5BF9\u4E8E\u67D0\u4E00\u90E8\u5206\u7279\u5B9A\u7684\u6570\u636E, \u4E00\u6B21\u53EA\u80FD\u5B58\u5728\u4E00\u4E2A\u53EF\u53D8\u5F15\u7528. \u4E0B\u9762\u7684\u4EE3\u7801\u8BD5\u56FE\u4E3A <code>s</code> \u521B\u5EFA\u4E24\u4E2A\u53EF\u53D8\u5F15\u7528, \u4F1A\u629B\u51FA\u9519\u8BEF:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>
    <span class="token keyword">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}, {}&quot;</span><span class="token punctuation">,</span> r1<span class="token punctuation">,</span> r2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u9519\u8BEF\u5185\u5BB9\u662F\u8FD9\u6837\u7684:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ cargo run
   Compiling ownership v0.1.0 <span class="token punctuation">(</span>file:///projects/ownership<span class="token punctuation">)</span>
error<span class="token punctuation">[</span>E0499<span class="token punctuation">]</span>: cannot borrow <span class="token variable"><span class="token variable">\`</span>s<span class="token variable">\`</span></span> as mutable <span class="token function">more</span> than once at a <span class="token function">time</span>
 --<span class="token operator">&gt;</span> src/main.rs:5:14
  <span class="token operator">|</span>
<span class="token number">4</span> <span class="token operator">|</span>     <span class="token builtin class-name">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span>mut s<span class="token punctuation">;</span>
  <span class="token operator">|</span>              ------ first mutable borrow occurs here
<span class="token number">5</span> <span class="token operator">|</span>     <span class="token builtin class-name">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span>mut s<span class="token punctuation">;</span>
  <span class="token operator">|</span>              ^^^^^^ second mutable borrow occurs here
<span class="token number">6</span> <span class="token operator">|</span> 
<span class="token number">7</span> <span class="token operator">|</span>     println<span class="token operator">!</span><span class="token punctuation">(</span><span class="token string">&quot;{}, {}&quot;</span>, r1, r2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">|</span>                        -- first borrow later used here

For <span class="token function">more</span> information about this error, try <span class="token variable"><span class="token variable">\`</span>rustc --explain E0499<span class="token variable">\`</span></span><span class="token builtin class-name">.</span>
error: could not compile <span class="token variable"><span class="token variable">\`</span>ownership<span class="token variable">\`</span></span> due to previous error
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u62A5\u9519\u663E\u793A\u8FD9\u6BB5\u4EE3\u7801\u662F\u65E0\u6548\u7684, \u56E0\u4E3A\u6211\u4EEC\u4E0D\u80FD\u91CD\u590D\u501F\u7528\u53EF\u53D8\u503C. \u7B2C\u4E00\u6B21\u53EF\u53D8\u501F\u7528\u53D1\u751F\u5728 <code>r1</code>, \u5B83\u7684\u751F\u547D\u5468\u671F\u5FC5\u987B\u6301\u7EED\u5230 <code>println!</code> \u4E2D, \u4F46\u5728\u53EF\u53D8\u5F15\u7528\u7684\u521B\u5EFA\u4E4B\u540E, \u4E0E\u4F7F\u7528\u5B83\u7684\u4EE3\u7801\u4E4B\u524D, \u6211\u4EEC\u53C8\u521B\u5EFA\u4E86\u4E00\u4E2A\u53EF\u53D8\u5F15\u7528, \u4E0E <code>r1</code> \u501F\u7528\u7684\u662F\u540C\u6837\u7684\u6570\u636E.</p><p>\u9632\u6B62\u540C\u4E00\u65F6\u95F4\u5BF9\u540C\u4E00\u6570\u636E\u8FDB\u884C\u591A\u4E2A\u53EF\u53D8\u5F15\u7528\u7684\u9650\u5236\u5141\u8BB8\u53EF\u53D8\u6027, \u4E0D\u8FC7\u662F\u4EE5\u4E00\u79CD\u53D7\u9650\u5236\u7684\u65B9\u5F0F\u5141\u8BB8. \u521A\u63A5\u89E6 Rust \u7684\u670B\u53CB\u53EF\u80FD\u4F1A\u5F88\u4E0D\u4E60\u60EF\u8FD9\u4E00\u70B9, \u56E0\u4E3A\u5728\u5927\u90E8\u5206\u5176\u4ED6\u8BED\u8A00\u4E2D, \u53D8\u91CF\u90FD\u662F\u53EF\u53D8\u7684. \u8FD9\u4E2A\u9650\u5236\u7684\u597D\u5904\u662F Rust \u80FD\u591F\u5728\u7F16\u8BD1\u9636\u6BB5\u907F\u514D\u6570\u636E\u7ADE\u4E89. <strong>\u6570\u636E\u7ADE\u4E89</strong> (<em>data race</em>) \u548C\u7ADE\u6001\u6761\u4EF6\u5F88\u50CF, \u5F53\u4EE5\u4E0B\u4E09\u4E2A\u884C\u4E3A\u51FA\u73B0\u65F6, \u5C31\u4F1A\u4EA7\u751F\u6570\u636E\u7ADE\u4E89:</p><ul><li>2\u4E2A\u53CA\u4EE5\u4E0A\u7684\u6307\u9488\u540C\u65F6\u53BB\u8BFB\u53D6\u540C\u6837\u7684\u6570\u636E.</li><li>\u81F3\u5C111\u4E2A\u6307\u9488\u88AB\u7528\u4E8E\u5199\u5165\u6570\u636E.</li><li>\u6CA1\u6709\u540C\u6B65\u6570\u636E\u8BBF\u95EE\u7684\u673A\u5236</li></ul><p>\u6570\u636E\u7ADE\u4E89\u5F88\u53EF\u80FD\u5BFC\u81F4\u672A\u88AB\u5B9A\u4E49\u7684\u884C\u4E3A, \u96BE\u4EE5\u5728\u8FD0\u884C\u65F6\u8FFD\u8E2A, \u800C\u4E14\u5F88\u96BE\u88AB\u53D1\u73B0\u548C\u4FEE\u590D; Rust \u4F1A\u901A\u8FC7\u62D2\u7EDD\u7F16\u8BD1\u542B\u6709\u6570\u636E\u7ADE\u4E89\u7684\u4EE3\u7801\u6765\u907F\u514D\u8FD9\u4E2A\u95EE\u9898!</p><p>\u4E00\u5982\u5F80\u5E38, \u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5927\u62EC\u53F7\u6765\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u4F5C\u7528\u57DF, \u4EE5\u5141\u8BB8\u591A\u4E2A\u53EF\u53D8\u5F15\u7528, \u53EA\u662F\u5B83\u4EEC\u4E0D\u80FD <strong>\u540C\u65F6</strong> \u5B58\u5728:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">{</span>
        <span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token comment">// r1 \u5728\u8FD9\u91CC\u79BB\u5F00\u4F5C\u7528\u57DF, \u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u5728\u6B64\u4E4B\u540E\u521B\u5EFA\u65B0\u7684\u5F15\u7528</span>

    <span class="token keyword">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Rust \u5728\u7EC4\u5408\u53EF\u53D8\u548C\u4E0D\u53EF\u53D8\u5F15\u7528\u7684\u65F6\u5019, \u4E5F\u91C7\u7528\u4E86\u7C7B\u4F3C\u7684\u89C4\u5219. \u4E0B\u9762\u7684\u4EE3\u7801\u4F1A\u5BFC\u81F4\u9519\u8BEF:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">;</span> <span class="token comment">// \u6CA1\u6709\u95EE\u9898</span>
    <span class="token keyword">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">;</span> <span class="token comment">// \u6CA1\u6709\u95EE\u9898</span>
    <span class="token keyword">let</span> r3 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span> <span class="token comment">// \u95EE\u9898\u5F88\u5927!</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}, {}, and {}&quot;</span><span class="token punctuation">,</span> r1<span class="token punctuation">,</span> r2<span class="token punctuation">,</span> r3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5177\u4F53\u9519\u8BEF\u4FE1\u606F\u5982\u4E0B:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ cargo run
   Compiling ownership v0.1.0 <span class="token punctuation">(</span>file:///projects/ownership<span class="token punctuation">)</span>
error<span class="token punctuation">[</span>E0502<span class="token punctuation">]</span>: cannot borrow <span class="token variable"><span class="token variable">\`</span>s<span class="token variable">\`</span></span> as mutable because it is also borrowed as immutable
 --<span class="token operator">&gt;</span> src/main.rs:6:14
  <span class="token operator">|</span>
<span class="token number">4</span> <span class="token operator">|</span>     <span class="token builtin class-name">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">;</span> // no problem
  <span class="token operator">|</span>              -- immutable borrow occurs here
<span class="token number">5</span> <span class="token operator">|</span>     <span class="token builtin class-name">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">;</span> // no problem
<span class="token number">6</span> <span class="token operator">|</span>     <span class="token builtin class-name">let</span> r3 <span class="token operator">=</span> <span class="token operator">&amp;</span>mut s<span class="token punctuation">;</span> // BIG PROBLEM
  <span class="token operator">|</span>              ^^^^^^ mutable borrow occurs here
<span class="token number">7</span> <span class="token operator">|</span> 
<span class="token number">8</span> <span class="token operator">|</span>     println<span class="token operator">!</span><span class="token punctuation">(</span><span class="token string">&quot;{}, {}, and {}&quot;</span>, r1, r2, r3<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">|</span>                                -- immutable borrow later used here

For <span class="token function">more</span> information about this error, try <span class="token variable"><span class="token variable">\`</span>rustc --explain E0502<span class="token variable">\`</span></span><span class="token builtin class-name">.</span>
error: could not compile <span class="token variable"><span class="token variable">\`</span>ownership<span class="token variable">\`</span></span> due to previous error
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u4ECE\u4EE5\u4E0A\u62A5\u9519\u4E2D\u53EF\u4EE5\u770B\u51FA\u6765, \u5BF9\u4E8E\u540C\u4E00\u4E2A\u503C, \u4E0D\u80FD\u540C\u65F6\u5B58\u5728\u4E0D\u53EF\u53D8\u5F15\u7528\u548C\u53EF\u53D8\u5F15\u7528. \u4E0D\u53EF\u53D8\u5F15\u7528\u7684\u7528\u6237\u5E76\u4E0D\u5E0C\u671B\u770B\u5230\u503C\u7A81\u7136\u53D8\u5316. \u4E0D\u8FC7, \u591A\u4E2A\u4E0D\u53EF\u53D8\u5F15\u7528\u8FD8\u662F\u88AB\u5141\u8BB8\u7684, \u56E0\u4E3A\u90FD\u662F\u6570\u636E\u8BFB\u53D6, \u4E92\u76F8\u4E4B\u95F4\u4E0D\u4F1A\u5F71\u54CD.</p><p>\u8981\u6CE8\u610F\u7684\u662F, \u4E00\u4E2A\u5F15\u7528\u7684\u4F5C\u7528\u57DF\u4ECE\u58F0\u660E\u65F6\u5F00\u59CB, \u6301\u7EED\u5230\u6700\u540E\u4E00\u6B21\u88AB\u4F7F\u7528\u4E3A\u6B62. \u6BD4\u5982, \u4EE5\u4E0B\u4EE3\u7801\u5C31\u80FD\u591F\u88AB\u6210\u529F\u7F16\u8BD1, \u56E0\u4E3A\u6700\u540E\u4E00\u6B21 <code>println!</code> \u4E2D\u5BF9\u4E0D\u53EF\u53D8\u6570\u636E\u7684\u5F15\u7528\u53D1\u751F\u5728\u53EF\u53D8\u5F15\u7528\u4E4B\u524D:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> r1 <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">;</span> <span class="token comment">// \u6CA1\u6709\u95EE\u9898</span>
    <span class="token keyword">let</span> r2 <span class="token operator">=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">;</span> <span class="token comment">// \u6CA1\u6709\u95EE\u9898</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} and {}&quot;</span><span class="token punctuation">,</span> r1<span class="token punctuation">,</span> r2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u53D8\u91CF r1 \u548C r2 \u4ECE\u8FD9\u91CC\u5F00\u59CB\u5C31\u4E0D\u4F1A\u518D\u88AB\u4F7F\u7528</span>

    <span class="token keyword">let</span> r3 <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">;</span> <span class="token comment">// \u6CA1\u6709\u95EE\u9898</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> r3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,39),w=s("\u4E0D\u53EF\u53D8\u5F15\u7528 "),_=n("code",null,"r1",-1),y=s(" \u548C "),q=n("code",null,"r2",-1),S=s(" \u7684\u4F5C\u7528\u57DF\u5728 "),x=n("code",null,"println!",-1),R=s(" \u4E4B\u540E\u5C31\u7EC8\u6B62\u4E86, \u7EC8\u6B62\u7684\u65F6\u673A\u5728\u53EF\u53D8\u5F15\u7528 "),E=n("code",null,"r3",-1),L=s(" \u88AB\u521B\u5EFA\u4E4B\u524D. \u8FD9\u4E9B\u4F5C\u7528\u57DF\u4E0D\u5B58\u5728\u91CD\u53E0\u7684\u90E8\u5206, \u56E0\u6B64\u4EE3\u7801\u662F\u5408\u6CD5\u7684. \u7F16\u8BD1\u5668\u5728\u4F5C\u7528\u57DF\u7ED3\u675F\u4E4B\u524D\u5224\u65AD\u4E0D\u518D\u4F7F\u7528\u7684\u5F15\u7528\u7684\u80FD\u529B\u88AB\u79F0\u4E3A "),B=n("strong",null,"\u975E\u8BCD\u6CD5\u4F5C\u7528\u57DF\u751F\u547D\u5468\u671F",-1),C=s(" ("),F=n("em",null,"Non-Lexical Lifetimes",-1),N=s(", \u7B80\u79F0 NLL). \u53EF\u4EE5\u5728"),j={href:"https://blog.rust-lang.org/2018/12/06/Rust-1.31-and-rust-2018.html#non-lexical-lifetimes",target:"_blank",rel:"noopener noreferrer"},T=s("\u7248\u672C\u6307\u5F15"),V=s("\u4E2D\u4E86\u89E3\u66F4\u591A\u4FE1\u606F."),$=o(`<p>\u5C3D\u7BA1\u501F\u7528\u7684\u629B\u9519\u6709\u65F6\u5019\u4F1A\u8BA9\u4EBA\u5F88\u56F0\u6270, \u4F46\u662F\u5176\u5B9E\u8FD9\u662F Rust \u7F16\u8BD1\u5668\u5728\u63D0\u524D\u6307\u51FA\u6F5C\u5728 bug (\u5728\u7F16\u8BD1\u9636\u6BB5\u800C\u975E\u8FD0\u884C\u65F6), \u629B\u51FA\u95EE\u9898. \u6709\u8FD9\u6837\u7684\u673A\u5236, \u6211\u4EEC\u5C31\u65E0\u9700\u518D\u8D39\u529B\u53BB\u8FFD\u8E2A\u4E3A\u4EC0\u4E48\u6211\u4EEC\u7684\u6570\u636E\u4E0E\u9884\u671F\u7684\u4E0D\u4E00\u81F4\u4E86.</p><h3 id="\u60AC\u5782\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u60AC\u5782\u5F15\u7528" aria-hidden="true">#</a> \u60AC\u5782\u5F15\u7528</h3><p>\u5728\u5B58\u5728\u6307\u9488\u6982\u5FF5\u7684\u8BED\u8A00\u4E2D, \u6211\u4EEC\u53EF\u80FD\u4F1A\u5F88\u5BB9\u6613\u9519\u8BEF\u5730\u521B\u5EFA<strong>\u60AC\u5782\u6307\u9488</strong> (<em>dangling pointer</em>): \u5176\u6307\u5411\u7684\u5185\u5B58\u53EF\u80FD\u5DF2\u7ECF\u5206\u914D\u7ED9\u5176\u5B83\u6301\u6709\u8005. \u76F8\u6BD4\u4E4B\u4E0B, \u5728 Rust \u4E2D, \u7F16\u8BD1\u5668\u4F1A\u786E\u4FDD\u5F15\u7528\u4E0D\u4F1A\u6210\u4E3A\u60AC\u5782\u72B6\u6001: \u5982\u679C\u4EE3\u7801\u4E2D\u5B58\u5728\u5BF9\u67D0\u90E8\u5206\u6570\u636E\u7684\u5F15\u7528, \u7F16\u8BD1\u5668\u4F1A\u786E\u4FDD\u8FD9\u90E8\u5206\u6570\u636E\u5728\u5176\u5F15\u7528\u524D\u59CB\u7EC8\u5B58\u5728\u4E8E\u4F5C\u7528\u57DF\u4E2D.</p><p>\u73B0\u5728\u6211\u4EEC\u5C1D\u8BD5\u521B\u5EFA\u4E00\u4E2A\u60AC\u5782\u5F15\u7528\u6765\u4E86\u89E3 Rust \u662F\u5982\u4F55\u5728\u7F16\u8BD1\u9636\u6BB5\u907F\u514D\u8FD9\u4E2A\u9519\u8BEF\u7684:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> reference_to_nothing <span class="token operator">=</span> <span class="token function">dangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">dangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token class-name">String</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token operator">&amp;</span>s
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5177\u4F53\u7684\u9519\u8BEF\u4FE1\u606F\u5982\u4E0B:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ cargo run
   Compiling ownership v0.1.0 <span class="token punctuation">(</span>file:///projects/ownership<span class="token punctuation">)</span>
error<span class="token punctuation">[</span>E0106<span class="token punctuation">]</span>: missing lifetime specifier
 --<span class="token operator">&gt;</span> src/main.rs:5:16
  <span class="token operator">|</span>
<span class="token number">5</span> <span class="token operator">|</span> fn dangle<span class="token punctuation">(</span><span class="token punctuation">)</span> -<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>String <span class="token punctuation">{</span>
  <span class="token operator">|</span>                ^ expected named lifetime parameter
  <span class="token operator">|</span>
  <span class="token operator">=</span> help: this <span class="token keyword">function</span><span class="token string">&#39;s return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the \`&#39;</span>static<span class="token variable"><span class="token variable">\`</span> lifetime
  <span class="token operator">|</span>
<span class="token number">5</span> <span class="token operator">|</span> fn dangle<span class="token punctuation">(</span><span class="token punctuation">)</span> -<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>&#39;static String <span class="token punctuation">{</span>
  <span class="token operator">|</span>                ~~~~~~~~

For <span class="token function">more</span> information about this error, try <span class="token variable">\`</span></span>rustc --explain E0106<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">.</span>
error: could not compile <span class="token variable">\`</span></span>ownership\` due to previous error
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u4EE5\u4E0A\u9519\u8BEF\u4FE1\u606F\u8FD8\u6D89\u53CA\u5230\u4E86\u4E00\u4E2A\u6211\u4EEC\u6682\u672A\u63D0\u53CA\u5230\u7684\u6982\u5FF5: \u751F\u547D\u5468\u671F. \u5728\u7B2C\u5341\u7AE0\u4E2D\u6211\u4EEC\u4F1A\u5BF9\u8FD9\u4E2A\u6982\u5FF5\u8FDB\u884C\u8BE6\u7EC6\u7684\u8BF4\u660E. \u4E0D\u8FC7\u5373\u4F7F\u6211\u4EEC\u6682\u65F6\u4E0D\u7406\u4F1A\u751F\u547D\u5468\u671F\u7684\u6982\u5FF5, \u901A\u8FC7\u4EE5\u4E0B\u7684\u9519\u8BEF\u4FE1\u606F\u4E5F\u80FD\u53D1\u73B0\u4EE3\u7801\u4E2D\u7684\u95EE\u9898:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>this function&#39;s <span class="token builtin class-name">return</span> <span class="token builtin class-name">type</span> contains a borrowed value, but there is no value
<span class="token keyword">for</span> it to be borrowed from
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u73B0\u5728\u6211\u4EEC\u5F00\u59CB\u770B\u770B, \u60AC\u5782(<code>dangle</code>)\u4EE3\u7801\u7684\u6BCF\u4E00\u4E2A\u9636\u6BB5, \u90FD\u53D1\u751F\u4E86\u4EC0\u4E48:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> reference_to_nothing <span class="token operator">=</span> <span class="token function">dangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">dangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token class-name">String</span> <span class="token punctuation">{</span> <span class="token comment">// dangle \u51FD\u6570\u8FD4\u56DE String \u7684\u5F15\u7528</span>

    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// s \u662F\u4E00\u4E2A\u65B0\u7684 String</span>

    <span class="token operator">&amp;</span>s <span class="token comment">// \u6211\u4EEC\u8FD4\u56DE String \u7684\u5F15\u7528 s</span>
<span class="token punctuation">}</span> <span class="token comment">// s \u5728\u6B64\u8DF3\u51FA\u4F5C\u7528\u57DF, \u540C\u65F6\u88AB\u4E22\u5F03, \u6240\u5360\u7528\u7684\u5185\u5B58\u4E5F\u88AB\u91CA\u653E</span>
<span class="token comment">// \u5371\u9669!</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u56E0\u4E3A <code>s</code> \u5728 <code>dangle</code> \u5185\u90E8\u88AB\u521B\u5EFA, \u5F53 <code>dangle</code> \u4E2D\u7684\u4EE3\u7801\u6267\u884C\u7ED3\u675F\u65F6, <code>s</code> \u6240\u5360\u7528\u7684\u5185\u5B58\u5C31\u4F1A\u88AB\u91CA\u653E. \u4E0D\u8FC7\u6211\u4EEC\u5728\u4EE3\u7801\u4E2D\u8FD4\u56DE\u4E86 <code>s</code> \u7684\u5F15\u7528. \u8FD9\u610F\u5473\u7740\u5F15\u7528\u6307\u5411\u4E86\u4E00\u4E2A\u4E0D\u5408\u6CD5\u7684 <code>String</code>, Rust \u4E0D\u4F1A\u5141\u8BB8\u6211\u4EEC\u8FD9\u6837\u505A.</p><p>\u6B64\u65F6\u7684\u89E3\u51B3\u65B9\u6848\u662F\u76F4\u63A5\u8FD4\u56DE <code>String</code>:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> string <span class="token operator">=</span> <span class="token function">no_dangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">no_dangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    s
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4EE5\u4E0A\u4EE3\u7801\u6CA1\u6709\u4EFB\u4F55\u95EE\u9898. \u6240\u6709\u6743\u88AB\u79FB\u51FA, \u6CA1\u6709\u5185\u5B58\u88AB\u91CA\u653E.</p><h3 id="\u5F15\u7528\u7684\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u5F15\u7528\u7684\u89C4\u5219" aria-hidden="true">#</a> \u5F15\u7528\u7684\u89C4\u5219</h3><p>\u73B0\u5728\u6211\u4EEC\u56DE\u987E\u4E00\u4E0B\u4E4B\u524D\u8BA8\u8BBA\u8FC7\u7684\u5173\u4E8E\u5F15\u7528\u7684\u6982\u5FF5:</p><ul><li>\u5728\u4EFB\u4F55\u65F6\u5019, \u4EE3\u7801\u4E2D\u8981\u4E48\u5B58\u5728\u4E00\u4E2A\u53EF\u53D8\u5F15\u7528, \u8981\u4E48\u5B58\u5728\u591A\u4E2A\u4E0D\u53EF\u53D8\u5F15\u7528.</li><li>\u5F15\u7528\u5FC5\u987B\u59CB\u7EC8\u662F\u5408\u6CD5\u7684.</li></ul><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u5F00\u59CB\u67E5\u770B\u53E6\u4E00\u79CD\u7C7B\u578B\u7684\u5F15\u7528: Slice.</p>`,19);function z(I,A){const p=t("RouterLink"),c=t("ExternalLinkIcon");return l(),r(u,null,[n("nav",m,[n("ul",null,[n("li",null,[a(p,{to:"#_4-2-\u5F15\u7528\u4E0E\u501F\u7528"},{default:e(()=>[d]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#\u53EF\u53D8\u7684\u5F15\u7528"},{default:e(()=>[g]),_:1})]),n("li",null,[a(p,{to:"#\u60AC\u5782\u5F15\u7528"},{default:e(()=>[f]),_:1})]),n("li",null,[a(p,{to:"#\u5F15\u7528\u7684\u89C4\u5219"},{default:e(()=>[h]),_:1})])])])])]),v,n("p",null,[w,_,y,q,S,x,R,E,L,B,C,F,N,n("a",j,[T,a(c)]),V]),$],64)}var O=i(b,[["render",z]]);export{O as default};
